Can the instructions for using `ikiwiki-makerepo` be clarified. This
command wants to create folders in the directory it is run in. Which
directory should that be - `$SRCDIR?` --Andy

> No, `ikiwiki-makerepo` does not create directories in the current
> directory. You specify the directory you want it to create and it creates
> the directory and makes it into a repository. The setup instuctions have
> examples of doing this. I don't see anything unclear. --[[Joey]]

Sorry, was not precise enough. It does if you are using the git option. I
believe this is partially explained on the rcs/git/ page. However I'm still
not totally clear where I should run the command when using git. If I
should be in $SRCDIR then updating the instructions to something like

    REPOSITORY=~/wiki.git
    cd $SRCDIR
    ikiwiki-makerepo git $SCDIR $REPOSITORY

might clear things up a little. Apologies if I'm being a bit dim, learning
ikiwiki and git at same time :) 

Have tried 3 options

1. mkdir $REP cd $REP run command (says $REP already exists so won't run)
2. rm -rf $REP cd $SRC run command (creates a repository in $SRC, does not create $REP ends with "remote origin already exists"
3. mkdir $TMP cd $TMP run command (creates a repository in $SRC/.git creates a repository in $TMP, does nothing to $REP, ends with "remote origin already exists".

Version of ikiwiki installed is package from Ubuntu/Hardy 2.19
Git version is 1.5.2.5

n.b. svn version of command worked fine :)

--Andy

> Please show me a transcript of it not working. Here is a transcript of it
> working just as the tutorial describes it to work:
> 	
> 	joey@kodama:~/tmp/work>ls
> 	repo/  src/
> 	joey@kodama:~/tmp/work>rm -rf repo src
> 	joey@kodama:~/tmp/work>mkdir src
> 	joey@kodama:~/tmp/work>echo hi > src/index.html
> 	joey@kodama:~/tmp/work>ikiwiki-makerepo git src repo
> 	Importing src into git
> 	Initialized empty shared Git repository in /home/joey/tmp/work/repo/
> 	Initialized empty Git repository in .git/
> 	Created initial commit 2254e46: initial commit
> 	 2 files changed, 2 insertions(+), 0 deletions(-)
> 	 create mode 100644 .gitignore
> 	 create mode 100644 index.html
> 	updating 'refs/heads/master'
> 	  from 0000000000000000000000000000000000000000
> 	  to   2254e462e31429e755bae56939c4319be8bb912b
> 	 Also local refs/remotes/origin/master
> 	Generating pack...
> 	Done counting 4 objects.
> 	Deltifying 4 objects...
> 	 100% (4/4) done
> 	Writing 4 objects...
> 	Unpacking 4 objects...
> 	 100% (4/4) done
> 	refs/heads/master: 0000000000000000000000000000000000000000 -> 2254e462e31429e755bae56939c4319be8bb912b
> 	
> 	Total 4 (delta 0), reused 0 (delta 0)
> 	Directory src is now a clone of git repository /home/joey/tmp/work/repo


OK here goes - I'm afraid its to color codes in it, so its a bit bigger and less readable than yours - apologies.

<pre>
Script started on Fri 11 Jan 2008 19:29:44 GMT
^[]0;deploy@little-un: ~/tmp^G^M^M
^[[44;01;33mdeploy@little-un^[[40;0;37m:^[[01;34m~/tmp^[[00m$ ls^M
^[[00m^[[00;32msrc^[[00m  ^[[00mtypescript^[[00m^M
^[[m^[]0;deploy@little-un: ~/tmp^G^M^M
^[[44;01;33mdeploy@little-un^[[40;0;37m:^[[01;34m~/tmp^[[00m$ echo hi src/index.mdwn^M
hi src/index.mdwn^M
^[]0;deploy@little-un: ~/tmp^G^M^M
^[[44;01;33mdeploy@little-un^[[40;0;37m:^[[01;34m~/tmp^[[00m$ echo hi src/index.mdwn^H^H^H^H^H^H^H^H^H^H^H^H^H^H^H^H^H^[[4h>^[[4l^[[4h ^[[4l^M
^[]0;deploy@little-un: ~/tmp^G^M^M
^[[44;01;33mdeploy@little-un^[[40;0;37m:^[[01;34m~/tmp^[[00m$ ikiwiki-makerepo src ^H^[[K^H^[[K^H^[[K^H^[[Kgit src repo^M
Importing src into git^M
Initialized empty shared Git repository in /home/deploy/tmp/^M
Initialized empty Git repository in .git/^M
Created initial commit 9f55e11: initial commit^M
 1 files changed, 1 insertions(+), 0 deletions(-)^M
 create mode 100644 .gitignore^M
fatal: '/home/deploy/tmp/repo': unable to chdir or not a git archive^M
fatal: The remote end hung up unexpectedly^M
error: failed to push to '/home/deploy/tmp/repo'^M
^[]0;deploy@little-un: ~/tmp^G^M^M
^[[44;01;33mdeploy@little-un^[[40;0;37m:^[[01;34m~/tmp^[[00m$ ls^M
^[[00m^[[00;32mbranches^[[00m  ^[[00mconfig^[[00m  ^[[00mdescription^[[00m  ^[[00mHEAD^[[00m  ^[[00mhi^[[00m  ^[[00;32mhooks^[[00m  ^[[00;32minfo^[[00m  ^[[00;32mobjects^[[00m  ^[[00;32mrefs^[[00m  ^[[00;32msrc^[[00m  ^[[00mtypescript^[[00m^M
^[[m^[]0;deploy@little-un: ~/tmp^G^M^M
^[[44;01;33mdeploy@little-un^[[40;0;37m:^[[01;34m~/tmp^[[00m$ exit^M

Script done on Fri 11 Jan 2008 19:32:21 GMT
</pre>

----

It isn't intended that .ikiwiki be versioned, is it? Do you have a svn:ignore set? 
Is there some magic way you can make the svn commands (and presumably commands for 
the other VCSs here) ignore the .ikiwiki directory during step 8, when they import it?
If not, maybe a note should be made that the user should delete this file before 
they import. --Ethan

> No, .ikiwiki should not be versioned, and a svn:ignore of it is reasonable,
> although probably too much noise for the setup instructions.
> I've switched to a different method that preserves .ikiwiki, w/o checking
> it in. --[[Joey]]

----

These instructions should probably show how to use a bare Git repository
(`GIT_DIR=somewhere.git git-init-db`) rather than a repository with a full
working copy. You can always clone the repository if you want your own local
working copy. Furthermore, this allows you to make multiple commits to your
working copy before pushing them to the repository and causing the wiki to
update. --[[JoshTriplett]]

> I'm currently testing and running such a setup. --[[tschwinge]]

Furthermore the git instructions should be changed to move the *.ikiwiki*
directory back into the wiki's working copy directory, isn't it? --[[tschwinge]]

> Yes, I think so.  I will clean these instructions up unless somebody tells me we're missing something fundamental. --[[BartMassey]]

>> Either you do it or I'll do it somewhen soon.  --[[tschwinge]]

----

Curious as to why support for CVS is not built in. --[[Luther]]

> See [[todo/CVS_backend|todo/CVS_backend]], but you might consider switching to a better version control system. --[[JoshTriplett]]
