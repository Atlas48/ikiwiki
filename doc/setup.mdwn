Traduction Anglais vers Français. 
Car Détecter la langue et sortir une traduction automatique de Anglais vers Français. 

Donne un résultats Nulle. 
On nous fait l’apologie des outils automatique. Et de l'intégration en continus.

Pour une Debian c'est quand même un combles. Pourquoi produire de la documentation 
dans la précipitation. Avec une méthode de types fast-foods ? 
Alors que c'est précisément pour la qualités des documents qui avais été traduit 
autres fois par de vrais personnes que cette Distros. Est devenue ce que elle est.
Achetez la 12éne d’huîtres, le magrets de canards du chefs, ...
C'est nous dire que chez Quiks ou Mc.Donalds ? ça serait la même choses qu'un restos !
  
Ce tutoriel vous guidera à travers la mise en place d'un wiki avec ikiwiki.

[[! Toc]]

## Installez ikiwiki

Si vous utilisez une Debian Jessie, une Ubuntu Xenial Xerius, une Linuxmint Sarah, Une Kali Sana,
    ikiwiki est un 
        <code> <a href="http://www.debian.org/doc/manuals/debian-reference/ch02.en.html#_basic_package_management_operations"> apt-get </a> installer ikiwiki </ code> 
    loin.
Si vous n'êtes pas, voir les [[téléchargement]] et [[installer]] pages.

Vous pouvez également essayer un [[image Docker | https: //github.com/elecnix/ikiwiki-docker]] avec ikiwiki pré-installé.

## Créez votre wiki

Tout ce qu'il faut pour créer un wiki entièrement fonctionnel en utilisant ikiwiki est en cours d'exécution
une seule commande.
[[! Modèle id = texte de la note = "" "
Pour plus de contrôle, les utilisateurs avancés peuvent préférer mettre en place un wiki
[[By_hand | byhand]].
"" "]]

% Ikiwiki --setup /etc/ikiwiki/auto.setup

Ou, mettre en place un blog avec ikiwiki, exécutez cette commande à la place.

% Ikiwiki --setup /etc/ikiwiki/auto-blog.setup

`Librpc-xml-perl` et` python-docutils` dépendances sont nécessaires.

De toute façon, il vous poser quelques questions.

Quel sera le wiki être nommé? foo
Quel système de contrôle de révision à utiliser? git
utilisateur Qu'est-ce wiki (ou OpenID) seront administrateur? joey
Choisissez un mot de passe:

Ensuite, attendez qu'il vous dire une url pour votre nouveau site ..

Mis en place avec succès foo:
url: http://example.com/~joey/foo
srcdir: ~ / foo
destdir: ~ / public_html / foo
référentiel: ~ / foo.git
Pour modifier les paramètres, modifier ~ / foo.setup puis exécutez:
ikiwiki --setup ~ / foo.setup

Terminé!

## Utilisation de l'interface Web

Maintenant, vous pouvez aller à l'URL, il vous a dit, et modifier des pages de votre wiki
en utilisant l'interface web.

(Si l'interface Web ne semble pas permettre l'édition ou ouvrir une session, vous pouvez
besoin de [[configure_the_web_server | conseils / dot_cgi]].)

## Commander et source wiki modifier

Une partie du plaisir d'utiliser ikiwiki est pas limitée à l'aide de la
web pour l'édition de pages, et au lieu d'utiliser votre éditeur de texte favori et
[[Revision_Control_System | rcs]].

Pour ce faire, vous devez vérifier une copie de la source à votre wiki.
(Vous devriez éviter de faire des changements directement à la `srcdir`, comme celle
la caisse est réservé pour une utilisation par ikiwiki lui-même.)

Selon le [[Revision_Control_System | rcs]] vous avez choisi d'utiliser,
vous pouvez exécuter une de ces commandes pour vérifier votre propre copie de vos wikis
la source. (Rappelez-vous de remplacer "foo" avec le vrai nom du répertoire.)

clone git foo.git foo.src
svn fichier de commande: foo.src //`pwd`/foo.svn/trunk
cvs -d `pwd` / foo get -P ikiwiki
bzr clone foo foo.src
hg clone foo foo.src
darcs get foo.darcs foo.src
# TODO monotone, tla

Maintenant, pour modifier les pages à la main, allez dans le répertoire que vous avez vérifié (c.-à-
"Foo.src"), et lancez votre éditeur de texte pour modifier `index.mdwn` ou quoi que
autre page que vous souhaitez modifier. Si vous avez choisi de créer un blog, il y a même un
échantillon premier message `messages / first_post.mdwn` que vous pouvez éditer.

Une fois que vous avez modifié une page, utilisez votre système de contrôle de révision de commettre
les changements. Pour les systèmes de contrôle de révision distribués, ne pas oublier de pousser
votre engagement.

Une fois le commit atteint le référentiel, ikiwiki remarquera, et
mettre à jour automatiquement le wiki avec vos modifications.

## Personnalisation du wiki

Il y a beaucoup de choses que vous pouvez configurer pour personnaliser votre wiki.
Celles-ci vont de changer le nom du wiki, pour permettre à [[plugins]],
à interdire les utilisateurs et les pages de verrouillage.

Si vous vous connectez en tant qu'utilisateur admin vous avez configuré plus tôt, et aller à
votre page Préférences, vous pouvez cliquer sur "Setup" pour personnaliser de nombreux
paramètres et plugins wiki.

Certains paramètres ne peuvent pas être configurés sur le Web, pour des raisons de sécurité ou
parce misconfiguring eux pourrait briser le wiki. Pour modifier ces paramètres,
vous pouvez modifier manuellement le fichier de configuration, qui est nommé quelque chose comme
"Foo.setup". Le fichier répertorie les paramètres de configuration disponibles tous
et donne une brève description de chacun.

Après avoir modifié ce fichier, vous devez ikiwiki dire de l'utiliser:

% Ikiwiki --setup foo.setup

Alternativement, vous pouvez ikiwiki demander de modifier les paramètres dans le fichier pour vous:

% Ikiwiki --changesetup foo.setup --plugin goodstuff

Voir [[utilisation]] pour plus d'options.

## Personnalisation de l'emplacement des fichiers

Comme un compilateur wiki, ikiwiki construit un wiki à partir de fichiers dans un répertoire source,
et délivre les fichiers dans un répertoire de destination. Le répertoire source est
une copie de travail vérifié à partir du référentiel du système de contrôle de version.

Lorsque vous avez utilisé `auto.setup`, ikiwiki mettre le répertoire source, destination
répertoire, et le dépôt dans votre répertoire personnel, et vous dit l'emplacement
de chaque. Ces endroits ont été choisis pour travailler sans personnalisation, mais vous
peut-être envie de les déplacer vers des répertoires différents.

Tout d'abord, déplacer le répertoire de destination et le référentiel autour.
   
% Mv public_html / foo /srv/web/foo.com
% Mv foo.git /srv/git/foo.git

Si vous avez déplacé le référentiel vers un nouvel emplacement, checkouts pointant à la
ancien emplacement ne fonctionnera pas, et la meilleure façon de traiter ce problème est de supprimer
eux et re-caisse du nouvel emplacement du référentiel.
   
% Rm -rf foo
% Git clone /srv/git/foo.git

Enfin, modifiez le fichier de configuration. Modifiez les paramètres pour `srcdir`,` destdir`,
`Url`,` cgiurl`, `cgi_wrapper`,` git_wrapper`, etc pour refléter où
vous avez déplacé les choses. Rappelez-vous de lancer `ikiwiki --setup` après la modification du
fichier d'installation.

## Profitez de votre wiki!

Ajoutez-vous à [[IkiWikiUsers]]. Et vérifier
les [[conseils]] pour savoir comment obtenir plus de ikiwiki.

----

_Notes_:

- Si vous recherchez le fichier où les utilisateurs sont stockés, il est dans `your_repository / .ikiwiki / userdb`. Celui qui est dans votre dépôt, il ne peut être trouvé dans votre `~ / .ikiwiki`.
- Si vous souhaitez activer un plugin que vous ** AURONT ** pour l'ajouter à la `add_plugins` tableau dans le` * fichier .setup` (ou utiliser le commutateur `--plugin` tout en appelant ikiwiki``). Décommentant les options de plugins / champs de configuration dans la configuration est pas ** TOUJOURS ** suffisante. Vous avez été averti.
Google Traduction pour les entreprises :Google Kit du traducteurGadget TraductionOutil d'aide à l'export
À propos de Google TraductionCommunautéMobile
À propos de GoogleConfidentialité et conditions d'utilisationAideEnvoyer des commentaires
