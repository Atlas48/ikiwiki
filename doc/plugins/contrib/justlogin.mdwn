This plugin is still in development. Currently it does bring up the login page and the login page does, with proper credentials, log in the user, but the returning page errors.

Place this code into a page:

&lt;form action="http://portable.local/cgi-bin/ikiwiki.cgi" method="get"&gt;

&lt;input type="hidden" name="do" value="justlogin" /&gt;

&lt;input type="submit" value="Login" /&gt;&lt;/form&gt;



This is the plugin so far:

	#!/usr/bin/perl
	# Bring up a login page that returns to the calling page
	package IkiWiki::Plugin::justlogin;
	
	use warnings;
	use strict;
	use IkiWiki 3.00;
	
	sub import {
		hook(type => "sessioncgi", id => "justlogin", call => \&sessioncgi);
		hook(type => "auth", id => "justlogin", call => \&auth);
	}
	
	sub sessioncgi ($$) {
	        my $q=shift;
	        my $session=shift;
	
		debug("jl sessioncgi1 running.");                        
	
	        if ($q->param('do') eq 'justlogin') {
			debug("Justlogin do=justlogin running.");
			if (! defined $session->param("name") ) {
				debug("Justlogin param!defined running.");
				$session->param(postsignin => $ENV{HTTP_REFERER} );
				$session->param("do" => "justgoback" );
				IkiWiki::cgi_savesession($session);
				IkiWiki::cgi_signin($q, $session);
	                	exit;
			} 
		} elsif ($session->param('do') eq 'justgoback') {
			debug("jl justgoback running.");
			if (! defined $session->param("name")) {
				debug("Justlogin redir running.");
				my $page=IkiWiki::possibly_foolish_untaint($q->param('postsignin'));
	                	$session->clear("postsignin");
				$session->clear("do");
				IkiWiki::cgi_savesession($session);
				IkiWiki::redirect($q, $page);
			}
		}
	}
	
	sub auth ($$) {                 
	        # While this hook is not currently used, it needs to exist
	        # so ikiwiki knows that the wiki supports logins, and will
	        # enable the Preferences page.
	}
	            
	
	1
	
