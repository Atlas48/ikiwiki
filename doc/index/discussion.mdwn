Seems like there should be a page for you to post your thoughts about
ikiwiki, both pro and con, anything that didn't work, ideas, or whatever.
Do so here..

Note that for more formal bug reports or todo items, you can also edit the
[[bugs]] and [[todo]] pages.

# Installation/Setup questions

I have just installed ikiwiki and it works - at least I have the example index.mdwn page
compiled and visible.  However I have a few issues/problems:-

* A couple of the 'optional' Perl modules aren't optional, you can't install ikiwiki without them,
these are HTML::Template and HTML::Scrubber (at least I think it was these two, it's a bit messy 
to go back and find out).

> You're right, HTML::Template is required. HTML::Scrubber is only required
> in the default configuration, and is optional if the htmlscrubber plugin
> is disabled. --[[Joey]]

* I don't seem to have got an ikiwiki man page created.

> It should be installed in /usr/share/man, or a similar directory
> depending on how your perl is set up and how you did the install.
> --[[Joey]]

> Found it, in /usr/local/share/man, since no other man pages are in either /usr/share/man or in /usr/local/share/man the ikiwiki
> man page is a bit lonely, and more to the point not on my MANPATH.  Still I have found it now, I'll just move it to somewhere
> more sensible. [[Chris]]

* Running "ikiwiki --setup ikiwiki.setup" doesn't do anything.  I have edited ikiwiki.setup to
my local settings.  There are no errors but neither does anything get compiled.  An ikiwiki
command to explicitly do the compile works fine.  Am I misunderstanding something here?

> Further tests indicate that ikiwiki isn't seeing changed files so doesn't always rebuild.
> How does ikiwiki decide when to rebuild?  I tried a full command line like "ikiwiki --verbose ikiwiki ~/public_html/ikiwiki --url=http://www.isbd.ltd.uk/~chris/ikiwiki/" and that doesn't do anything
either though it was the command line I originally used to compile.  After a long interval I 'touch'ed 
the files and then it *did* compile but 'touch'ing the files after a few minutes only doesn't seem to force a recompile.  I'm even more confused!

> ikiwiki only compiles files whose modification times have changed. It
> should see any change made as close as a second after the last compile.
> When run with --setup, ikiwiki always rebuilds every file in the wiki. If
> --setup is not working, you must have it pointed at the wrong path or
> something; you can pass -v to see what it's doing. I don't know why it
> would not see recently changed files; you could try stracing it.
> --[[Joey]]

> OK, thanks, I don't quite know what was happening before but it seems to be working right now.
> --[[Chris]]

>> Weird. I wish I knew what happened, but as it's working now, I'm
>> guessing some kind of user error was involved. --[[Joey]]

* I wish there was a mailing list, much easier for this sort of stuff than this, apart from
anything else I get to use a decent editor.

----
# Excellent - how do I translate a TWiki site?

I just discovered ikiwiki quite by chance, I was looking for a console/terminal
menu system and found pdmenu.  So pdmenu brought me to here and I've found ikiwiki!
It looks as if it's just what I've been wanting for a long time.  I wanted something
to create mostly text web pages which, as far as possible, have source which is human 
readable or at least in a standard format.  ikiwiki does this twice over by using 
markdown for the source and producing static HTML from it.

I'm currently using TWiki and have a fair number of pages in that format, does
anyone have any bright ideas for translating?  I can knock up awk scripts fairly
easily, perl is possible (but I'm not strong in perl).

> Let us know if you come up with something to transition from the other
> format. Another option would be writing a ikiwiki plugin to support the
> TWiki format. --[[Joey]]

> Jamey Sharp and I have a set of scripts in progress to convert other wikis to ikiwiki, including history, so that we can migrate a few of our wikis.  We already have support for migrating MoinMoin wikis to ikiwiki, including conversion of the entire history to Git.  We used this to convert the [XCB wiki](http://xcb.freedesktop.org/wiki/) to ikiwiki; until we finalize the conversion and put the new wiki in place of the old one, you can browse the converted result at <http://xcb.freedesktop.org/ikiwiki>.  We already plan to add support for TWiki (including history, since you can just run parsecvs on the TWiki RCS files to get Git), so that we can convert the [Portland State Aerospace Society wiki](http://psas.pdx.edu) (currently in Moin, but with much of its history in TWiki, and with many of its pages still in TWiki format using Jamey's TWiki format for MoinMoin).
>
> Our scripts convert by way of HTML, using portions of the source wiki's code to render as HTML (with some additional code to do things like translate MoinMoin's `\[[TableOfContents]]` to ikiwiki's `\[[toc ]]`), and then using a modified [[cpan HTML::WikiConverter]] to turn this into markdown and ikiwiki.  This produces quite satisfactory results, apart from things that don't have any markdown equivalent and thus remain HTML, such as tables and definition lists.  Conversion of the history occurs by first using another script we wrote to translate MoinMoin history to Git, then using our git-map script to map a transformation over the Git history.
>
> We will post the scripts as soon as we have them complete enough to convert our wikis.
>
> -- Josh Triplett

>> Thanks for an excellent Xmas present, I will appreciate the additional 
>> users this will help switch to ikiwiki! --[[Joey]]

----

# OpenID

I just figured I'd edit something on the page with my OpenID, since you've implemented it! --*[Kyle](http://kitenet.net/~kyle/)*=

> Kyle, If you like openid, I can switch your personal wiki over to use your openid. --[[Joey]]

---- 

# ACL

How about adding ACL? So that you can control which users are allowed
to read, write certain pages. The moinmoin wiki has that, and it is
something, that I think is very valuable. 

> ikiwiki currently has only the most rudimentary access controls: pages
> can be locked, or unlocked and only the admin can edit locked pages. That
> could certianly be expanded on, although it's not an area that I have an
> overwhelming desire to work on myself right now. Patches appreciated and
> I'll be happy to point you in the right directions.. --[[Joey]]

>> I'm really curious how you'd suggest implementing ACLs on reading a page.
>> It seems to me the only way you could do it is .htaccess DenyAll or something,
>> and then route all page views through ikiwiki.cgi. Am I missing something?
>> --[[Ethan]]

>>> Or you could just use apache or whatever and set up the access controls
>>> there. Of course, that wouldn't integrate very well with the wiki,
>>> unless perhaps you decided to use http basic authentication and the
>>> httpauth plugin for ikiwiki that integrates with that.. --[[Joey]]

>>>> Which would rule out openid, or other fun forms of auth. And routing all access 
>>>> through the CGI sort of defeats the purpose of ikiwiki. --[[Ethan]]

----

Some questions about the RecentChanges function. -- Ethan

> (Moved to [[todo/recentchanges]] --[[Joey]])

----

Also, I'd like to request another template parameter which is just
$config{url}. That way you won't have to hard-code the URL of the wiki into
the template. -- Ethan

> That's already available in the BASEURL parameter. --[[Joey]]

----

# Canonical feed location?

Any way to use `inline` but point the feed links to a different feed on the
same site?  I have news in news/*, a news archive in news.mdwn, and the
first few news items on index.mdwn, but I don't really want two separate
feeds, one with all news and one with the latest few articles; I'd rather
point the RSS feed links of both to the same feed.  (Which one, the one
with all news or the one with the latest news only, I don't know yet.)

> Not currently. It could be implemented, or you could just turn off the
> rss feed for the index page, and manually put in a wikilink to the news
> page and rss feed. --[[Joey]]

>> That wouldn't use the same style for the RSS and Atom links, and it
>> wouldn't embed the feed link into `<head>` so that browsers can automatically
>> find it.

----

# asciidoc or txt2tags ?

Any plugins or support for using asciidoc or txt2tags as the wiki language and/or exporting to asciidoc or txt2tags?

> No, but it should be quite easy to write such a plugin. The otl plugin
> is a good example of writing a formatting plugin that uses an external
> conversion program, like asciidoc or txt2tags. --[[Joey]]

----

# LaTeX support?

Any plugins or support for exporting to LaTeX?
(If not could use asciidoc or txt2tags mentioned above to generated LaTeX.)

> It's already [[been_requested|todo/latex]], although perhaps not
> working the way you're thinking of. Noone is currently working on it.
> --[[Joey]]

>> I did some tests with using Markdown and a customized HTML::Latex and html2latex
>> and it appears it will work for me now. (I hope to use ikiwiki for many
>> to collaborate on a printed book that will be generated at least once per day in PDF format.)
>>
>> --JeremyReed

----

# Using with RCS?

Any examples of using co(1), ci(1) and other RCS related tools with ikiwiki?

> I don't belive that RCS offers enough SCM features to be useable as a
> fullfledged backend to ikiwiki. For one thing, there's no way to have
> hook scripts run when changes are ci'd, is there? So you'd have to ci and
> then manually run ikiwiki. It should be possible to do an RCS backend
> that supports web commits with ci, and history (parsing the rcs files by
> hand?). If you're a masochist. :-) --[[Joey]]

>> It does have history using rlog(1) which is similar format to "cvs log".
>> I don't think it has any possible hooks. What would happen if I call
>> ikiwiki directly from rcs_commit? (I didn't try yet.) On that note,
>> I don't see any way for ikiwiki to generate a single file, but I guess
>> that doesn't matter as --refresh should be fast enough.
>> I made a Rcs/rcs.pm plugin from Stub. I have been testing it some.
>>
>> --JeremyReed

>> I made a working rcs plugin. And I made a RCS-to-web CGI. Details
>> at [[patchqueue/rcs_(third-party_plugin)]]
>> --[[JeremyReed]]
>>
>> (Moved to patchqueue --[[Joey]])

----

# Using with CVS?

Any examples of using ikiwiki with cvs?

> No, although the existing svn backend could fairly esily be modified into
> a CVS backend, by someone who doesn't mind working with CVS. --[[Joey]]

----

# Show differences before saving page?

It would be nice to be able to have a button to show "Differences" (or "Show Diff") when
editing a page. Is that an option that can be enabled?

> It's doable, it could even be done by a [[todo/plugin]], I think.
> --[[Joey]]

----

# Max submit size?

Any setting for limiting how many kilobytes can be submitted via the "edit" form?
-- [[JeremyReed]]

> Not currently. Worried about abuse? --[[Joey]]
