Seems like there should be a page for you to post your thoughts about
ikiwiki, both pro and con, anything that didn't work, ideas, or whatever.
Do so here..

Note that for more formal bug reports or todo items, you can also edit the
[[bugs]] and [[todo]] pages.

[[toc ]]

# Installation/Setup questions

(I've moved HarleyPig's problem to its [[own_page|bugs/xgettext_issue]]
--[[Joey]])

----
# Excellent - how do I translate a TWiki site?

I just discovered ikiwiki quite by chance, I was looking for a console/terminal
menu system and found pdmenu.  So pdmenu brought me to here and I've found ikiwiki!
It looks as if it's just what I've been wanting for a long time.  I wanted something
to create mostly text web pages which, as far as possible, have source which is human 
readable or at least in a standard format.  ikiwiki does this twice over by using 
markdown for the source and producing static HTML from it.

I'm currently using TWiki and have a fair number of pages in that format, does
anyone have any bright ideas for translating?  I can knock up awk scripts fairly
easily, perl is possible (but I'm not strong in perl).

> Let us know if you come up with something to transition from the other
> format. Another option would be writing a ikiwiki plugin to support the
> TWiki format. --[[Joey]]

> Jamey Sharp and I have a set of scripts in progress to convert other wikis to ikiwiki, including history, so that we can migrate a few of our wikis.  We already have support for migrating MoinMoin wikis to ikiwiki, including conversion of the entire history to Git.  We used this to convert the [XCB wiki](http://xcb.freedesktop.org/wiki/) to ikiwiki; until we finalize the conversion and put the new wiki in place of the old one, you can browse the converted result at <http://xcb.freedesktop.org/ikiwiki>.  We already plan to add support for TWiki (including history, since you can just run parsecvs on the TWiki RCS files to get Git), so that we can convert the [Portland State Aerospace Society wiki](http://psas.pdx.edu) (currently in Moin, but with much of its history in TWiki, and with many of its pages still in TWiki format using Jamey's TWiki format for MoinMoin).
>
> Our scripts convert by way of HTML, using portions of the source wiki's code to render as HTML (with some additional code to do things like translate MoinMoin's `\[[TableOfContents]]` to ikiwiki's `\[[toc ]]`), and then using a modified [[cpan HTML::WikiConverter]] to turn this into markdown and ikiwiki.  This produces quite satisfactory results, apart from things that don't have any markdown equivalent and thus remain HTML, such as tables and definition lists.  Conversion of the history occurs by first using another script we wrote to translate MoinMoin history to Git, then using our git-map script to map a transformation over the Git history.
>
> We will post the scripts as soon as we have them complete enough to convert our wikis.
>
> -- Josh Triplett

>> Thanks for an excellent Xmas present, I will appreciate the additional 
>> users this will help switch to ikiwiki! --[[Joey]]

----

# asciidoc or txt2tags ?

Any plugins or support for using asciidoc or txt2tags as the wiki language and/or exporting to asciidoc or txt2tags?

> No, but it should be quite easy to write such a plugin. The otl plugin
> is a good example of writing a formatting plugin that uses an external
> conversion program, like asciidoc or txt2tags. --[[Joey]]

----

# LaTeX support?

Any plugins or support for exporting to LaTeX?
(If not could use asciidoc or txt2tags mentioned above to generated LaTeX.)

> It's already [[been_requested|todo/latex]], although perhaps not
> working the way you're thinking of. Noone is currently working on it.
> --[[Joey]]

>> I did some tests with using Markdown and a customized HTML::Latex and html2latex
>> and it appears it will work for me now. (I hope to use ikiwiki for many
>> to collaborate on a printed book that will be generated at least once per day in PDF format.)
>>
>> --JeremyReed

>>> Have a look at [pandoc](http://code.google.com/p/pandoc/).  It can make PDFs via pdflatex. --[[roktas]]

----

# Using with CVS?

Any examples of using ikiwiki with cvs?

> No, although the existing svn backend could fairly esily be modified into
> a CVS backend, by someone who doesn't mind working with CVS. --[[Joey]]

----

# Show differences before saving page?

It would be nice to be able to have a button to show "Differences" (or "Show Diff") when
editing a page. Is that an option that can be enabled?

> It's doable, it could even be done by a [[todo/plugin]], I think.
> --[[Joey]]

----

# Max submit size?

Any setting for limiting how many kilobytes can be submitted via the "edit" form?
-- [[JeremyReed]]

> Not currently. Worried about abuse? --[[Joey]]

>> I didn't want it abused accidently or with malice. I was thinking that Perl's CGI.pm would handle this, but I don't see that.
>> I read that textarea max bytes may be 500 lines or 28000 characters or 30000 characters or 64kB. It seems like it
>> varies and I didn't test myself, because I guess it may depend on different clients and different HTTP servers. 
>> This could be checked using javascript on the client side (before submitting) and by checking size on server side (before saving). --[[JeremyReed]]

>>> The absolute limit varies by browser. If there are web servers that
>>> also limit it, I don't know of them. --[[Joey]]

----

# Access Keys

Would anyone else find this a valuable addition.  In oddmuse and instiki (the only other
wiki engines I am currently using, the edit, home, and submit link tags have an
accesskey attribute.  I find it nice not to have to resort to the mouse for those
actions.  However, it may not be something everyone appreciates.  Any thoughts?
--[Mazirian](http://mazirian.com)

> Maybe, although it would need to take the critisism at
> http://www.cs.tut.fi/~jkorpela/forms/accesskey.html into account.

>> Thank you for that link. Given that the edit link is the first thing you tab to
>> in the current layout, I guess it isn't all that necessary. I have had a 
>> a user complaint recently that Alt-e in oddmuse was overriding his access
>> to the browser menu.

----

# Editing the style sheet.

It would be nice to be able to edit the stylesheet by means of the cgi.  Or is this possible?  I wasn't able to achieve it.
Ok, that's my last 2 cents for a while. --[Mazirian](http://mazirian.com)

> I don't support editing it, but if/when ikiwiki gets file upload support,
> it'll be possible to upload a style sheet. (If .css is in the allowed
> extensions list.. no idea how safe that would be, a style sheet is
> probably a great place to put XSS attacks and evil javascript that would
> be filtered out of any regular page in ikiwiki). --[[Joey]]

>> I hadn't thought of that at all.  It's a common feature and one I've
>> relied on safely, because the wikis I am maintaining at the moment
>> are all private and restricted to trusted users. Given that the whole
>> point of ikiwiki is to be able to access and edit via the shell as
>> well as the web, I suppose the features doesn't add a lot.  By the
>> way, the w3m mode is brilliant.  I haven't tried it yet, but the idea
>> is great.

----

# Should not create an existing page

This might be a bug, but will discuss it here first.
Clicking on an old "?" or going to a create link but new Markdown content exists, should not go into "create" mode, but should do a regular "edit".

> I belive that currently it does a redirect to the new static web page.
> At least that's the intent of the code. --[[Joey]]

>> Try at your site: `?page=discussion&from=index&do=create`
>> It brings up an empty textarea to start a new webpage -- even though it already exists here. --reed

>>> Ah, right. Notice that the resulting form allows saving the page as
>>> discussion, or users/discussion, but not index/discussion, since this
>>> page already exists. If all the pages existed, it would do the redirect
>>> thing. --[[Joey]]

----

# User database tools?

Any tool to view user database?

Any tool to edit the user database?

> No, but it's fairly easy to write such tools in perl. For example, to
> list all users in the user database:

	joey@kodama:~/src/joeywiki/.ikiwiki>perl -le 'use Storable; my $userinfo=Storable::retrieve("userdb"); print $_ foreach keys %$userinfo'         
	http://joey.kitenet.net/
	foo

> To list each user's email address:

	joey@kodama:~/src/joeywiki/.ikiwiki>perl -le 'use Storable; my $userinfo=Storable::retrieve("userdb"); print $userinfo->{$_}->{email} foreach keys %$userinfo'
	
	joey@kitenet.net

> Editing is simply a matter of changing values and calling Storable::store().
> I've not written actual utilities to do this yet because I've only needed
> to do it rarely, and the data I've wanted has been different each time.
> --[[Joey]]
