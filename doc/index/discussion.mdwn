Seems like there should be a page for you to post your thoughts about
ikiwiki, both pro and con, anything that didn't work, ideas, or whatever.
Do so here..

Note that for more formal bug reports or todo items, you can also edit the
[[bugs]] and [[todo]] pages.

# Installation/Setup questions

I have just installed ikiwiki and it works - at least I have the example index.mdwn page
compiled and visible.  However I have a few issues/problems:-

* A couple of the 'optional' Perl modules aren't optional, you can't install ikiwiki without them,
these are HTML::Template and HTML::Scrubber (at least I think it was these two, it's a bit messy 
to go back and find out).

> You're right, HTML::Template is required. HTML::Scrubber is only required
> in the default configuration, and is optional if the htmlscrubber plugin
> is disabled. --[[Joey]]

* I don't seem to have got an ikiwiki man page created.

> It should be installed in /usr/share/man, or a similar directory
> depending on how your perl is set up and how you did the install.
> --[[Joey]]

> Found it, in /usr/local/share/man, since no other man pages are in either /usr/share/man or in /usr/local/share/man the ikiwiki
> man page is a bit lonely, and more to the point not on my MANPATH.  Still I have found it now, I'll just move it to somewhere
> more sensible. [[Chris]]

* Running "ikiwiki --setup ikiwiki.setup" doesn't do anything.  I have edited ikiwiki.setup to
my local settings.  There are no errors but neither does anything get compiled.  An ikiwiki
command to explicitly do the compile works fine.  Am I misunderstanding something here?

> Further tests indicate that ikiwiki isn't seeing changed files so doesn't always rebuild.
> How does ikiwiki decide when to rebuild?  I tried a full command line like "ikiwiki --verbose ikiwiki ~/public_html/ikiwiki --url=http://www.isbd.ltd.uk/~chris/ikiwiki/" and that doesn't do anything
either though it was the command line I originally used to compile.  After a long interval I 'touch'ed 
the files and then it *did* compile but 'touch'ing the files after a few minutes only doesn't seem to force a recompile.  I'm even more confused!

> ikiwiki only compiles files whose modification times have changed. It
> should see any change made as close as a second after the last compile.
> When run with --setup, ikiwiki always rebuilds every file in the wiki. If
> --setup is not working, you must have it pointed at the wrong path or
> something; you can pass -v to see what it's doing. I don't know why it
> would not see recently changed files; you could try stracing it.
> --[[Joey]]

> OK, thanks, I don't quite know what was happening before but it seems to be working right now.
> --[[Chris]]

>> Weird. I wish I knew what happened, but as it's working now, I'm
>> guessing some kind of user error was involved. --[[Joey]]

* I wish there was a mailing list, much easier for this sort of stuff than this, apart from
anything else I get to use a decent editor.

----
# Excellent - how do I translate a TWiki site?

I just discovered ikiwiki quite by chance, I was looking for a console/terminal
menu system and found pdmenu.  So pdmenu brought me to here and I've found ikiwiki!
It looks as if it's just what I've been wanting for a long time.  I wanted something
to create mostly text web pages which, as far as possible, have source which is human 
readable or at least in a standard format.  ikiwiki does this twice over by using 
markdown for the source and producing static HTML from it.

I'm currently using TWiki and have a fair number of pages in that format, does
anyone have any bright ideas for translating?  I can knock up awk scripts fairly
easily, perl is possible (but I'm not strong in perl).

> Let us know if you come up with something to transition from the other
> format. Another option would be writing a ikiwiki plugin to support the
> TWiki format. --[[Joey]]

> Jamey Sharp and I have a set of scripts in progress to convert other wikis to ikiwiki, including history, so that we can migrate a few of our wikis.  We already have support for migrating MoinMoin wikis to ikiwiki, including conversion of the entire history to Git.  We used this to convert the [XCB wiki](http://xcb.freedesktop.org/wiki/) to ikiwiki; until we finalize the conversion and put the new wiki in place of the old one, you can browse the converted result at <http://xcb.freedesktop.org/ikiwiki>.  We already plan to add support for TWiki (including history, since you can just run parsecvs on the TWiki RCS files to get Git), so that we can convert the [Portland State Aerospace Society wiki](http://psas.pdx.edu) (currently in Moin, but with much of its history in TWiki, and with many of its pages still in TWiki format using Jamey's TWiki format for MoinMoin).
>
> Our scripts convert by way of HTML, using portions of the source wiki's code to render as HTML (with some additional code to do things like translate MoinMoin's `\[[TableOfContents]]` to ikiwiki's `\[[toc ]]`), and then using a modified [[cpan HTML::WikiConverter]] to turn this into markdown and ikiwiki.  This produces quite satisfactory results, apart from things that don't have any markdown equivalent and thus remain HTML, such as tables and definition lists.  Conversion of the history occurs by first using another script we wrote to translate MoinMoin history to Git, then using our git-map script to map a transformation over the Git history.
>
> We will post the scripts as soon as we have them complete enough to convert our wikis.
>
> -- Josh Triplett

>> Thanks for an excellent Xmas present, I will appreciate the additional 
>> users this will help switch to ikiwiki! --[[Joey]]

----

# OpenID

I just figured I'd edit something on the page with my OpenID, since you've implemented it! --*[Kyle](http://kitenet.net/~kyle/)*=

> Kyle, If you like openid, I can switch your personal wiki over to use your openid. --[[Joey]]

---- 

# ACL

> Moved to [[todo/ACL]] --[[Joey]]

----

Some questions about the RecentChanges function. -- Ethan

> (Moved to [[todo/recentchanges]] --[[Joey]])

----

Also, I'd like to request another template parameter which is just
$config{url}. That way you won't have to hard-code the URL of the wiki into
the template. -- Ethan

> That's already available in the BASEURL parameter. --[[Joey]]

----

# Canonical feed location?

Moved to [[todo/canonical_feed_location]] --[[Joey]]

----

# asciidoc or txt2tags ?

Any plugins or support for using asciidoc or txt2tags as the wiki language and/or exporting to asciidoc or txt2tags?

> No, but it should be quite easy to write such a plugin. The otl plugin
> is a good example of writing a formatting plugin that uses an external
> conversion program, like asciidoc or txt2tags. --[[Joey]]

----

# LaTeX support?

Any plugins or support for exporting to LaTeX?
(If not could use asciidoc or txt2tags mentioned above to generated LaTeX.)

> It's already [[been_requested|todo/latex]], although perhaps not
> working the way you're thinking of. Noone is currently working on it.
> --[[Joey]]

>> I did some tests with using Markdown and a customized HTML::Latex and html2latex
>> and it appears it will work for me now. (I hope to use ikiwiki for many
>> to collaborate on a printed book that will be generated at least once per day in PDF format.)
>>
>> --JeremyReed

----

# Using with CVS?

Any examples of using ikiwiki with cvs?

> No, although the existing svn backend could fairly esily be modified into
> a CVS backend, by someone who doesn't mind working with CVS. --[[Joey]]

----

# Show differences before saving page?

It would be nice to be able to have a button to show "Differences" (or "Show Diff") when
editing a page. Is that an option that can be enabled?

> It's doable, it could even be done by a [[todo/plugin]], I think.
> --[[Joey]]

----

# Max submit size?

Any setting for limiting how many kilobytes can be submitted via the "edit" form?
-- [[JeremyReed]]

> Not currently. Worried about abuse? --[[Joey]]

>> I didn't want it abused accidently or with malice. I was thinking that Perl's CGI.pm would handle this, but I don't see that.
>> I read that textarea max bytes may be 500 lines or 28000 characters or 30000 characters or 64kB. It seems like it
>> varies and I didn't test myself, because I guess it may depend on different clients and different HTTP servers. 
>> This could be checked using javascript on the client side (before submitting) and by checking size on server side (before saving). --[[JeremyReed]]

>>> The absolute limit varies by browser. If there are web servers that
>>> also limit it, I don't know of them. --[[Joey]]

----

# Disable sub-discussion pages?

Moved to [[bugs]] -- [[Joey]]

----

# Access Keys

Would anyone else find this a valuable addition.  In oddmuse and instiki (the only other
wiki engines I am currently using, the edit, home, and submit link tags have an
accesskey attribute.  I find it nice not to have to resort to the mouse for those
actions.  However, it may not be something everyone appreciates.  Any thoughts?
--[Mazirian](http://mazirian.com)

> Maybe, although it would need to take the critisism at
> http://www.cs.tut.fi/~jkorpela/forms/accesskey.html into account.

>> Thank you for that link. Given that the edit link is the first thing you tab to
>> in the current layout, I guess it isn't all that necessary. I have had a 
>> a user complaint recently that Alt-e in oddmuse was overriding his access
>> to the browser menu.

----

# Editing the style sheet.

It would be nice to be able to edit the stylesheet by means of the cgi.  Or is this possible?  I wasn't able to achieve it.
Ok, that's my last 2 cents for a while. --[Mazirian](http://mazirian.com)

> I don't support editing it, but if/when ikiwiki gets file upload support,
> it'll be possible to upload a style sheet. (If .css is in the allowed
> extensions list.. no idea how safe that would be, a style sheet is
> probably a great place to put XSS attacks and evil javascript that would
> be filtered out of any regular page in ikiwiki). --[[Joey]]

>> I hadn't thought of that at all.  It's a common feature and one I've
>> relied on safely, because the wikis I am maintaining at the moment
>> are all private and restricted to trusted users. Given that the whole
>> point of ikiwiki is to be able to access and edit via the shell as
>> well as the web, I suppose the features doesn't add a lot.  By the
>> way, the w3m mode is brilliant.  I haven't tried it yet, but the idea
>> is great.

----

# Disable build/install requirement on PerlMagick

Some installs of PerlMagick require X11. I tried to first disable using "img" by using "--disable-plugin img"
in the Makefile. But still failed. My workaround was to remove "img" from the bundle in IkiWiki/Plugin/goodstuff.pm
before building. What is the recommended way to install ikiwiki without "img" support? --[[JeremyReed]]

> I've fixed this in svn so plugins in goodstuff can be disabled. --[[Joey]]

----

# Documentation for banning users?

The [[todo]] page says admins can ban users. Where is this documented? I search the source and found 
set\_banned\_users() which led me to the CGI "preferences" form for the admin. Now logged in as an admin (as defined in my setup configuration),
I see the field for this. But no details on how to use it. From the source it appears to be a space-delimited list of usernames. (I didn't test yet.)

Can you please provide a [[/banned_users]] documentation about "banning" users function linked from the [[Features]] page and maybe [[security]] page and linked from the "preferences" for the admin?
(I don't do this myself as I am unsure about this and still reading the code about banning users.)

----

# Documentation for locking pages?

The [[features]] page, the [[todo]] page and the [[usage]] manual page say pages can be locked and only the admin can edit locked pages.
Where is locking pages documented? ... A moment later, from searching source I found this is configured via the preferences for the admin
and that links to [[pagespec]].

Can you please provide a [[/page_locking]] doc about locking pages linked from the [[features]] page and elsewhere? And have that link to [[pagespec]]?
(I don't do this myself as I am unsure about this and still reading the code about locking pages.)

----

# RecentChanges should show path to wiki sub-pages?

The RecentChanges only shows the final file name for the recently changes file,
for example "discussion". It would be more useful to see "index/discussion"
or the path to the sub-page. I think this is handled by the htmllink() routine.

